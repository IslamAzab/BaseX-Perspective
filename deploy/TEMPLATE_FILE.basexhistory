exit
set DBPATH
CREATE DB test-DB
open test-DB
add TO test-DB G:\new_release
exit
add TO test-DB G:\new_release
open test-DB
add TO test-DB G:\new_release
exit
add TO test-DB G:\new_release\takedown
open test-DB
add TO test-DB G:\new_release\takedown
exit
open test-DB
add TO test-DB G:\new_release\BY_DATE
exit
open test-DB
add TO test-DB G:\new_release\BY_DATE
exit
open test-DB
add TO test-DB G:\new_release\BY_DATE_3
inspect
info db
add TO test-DB G:\new_release\BY_DATE_4
info db
add TO test-DB G:\new_release\BY_DATE_5
info db
add TO test-DB G:\new_release\BY_DATE_5
info db
add TO test-DB G:\new_release\BY_DATE_5
info db
add TO test-DB G:\new_release\BY_DATE_6
info db
add TO test-DB G:\new_release\BY_DATE_6
info db
add TO test-DB G:\new_release\BY_DATE_7
info db
repo list
OPTIMIZE
info db
exit
info db
open test-DB
info db
exit
CREATE DB mini-Sample-DB
add TO test-DB G:\new_release\BY_DATE\BY_DATE_3
CREATE DB mini-Sample-DB
add TO mini-Sample-DB G:\new_release\BY_DATE\BY_DATE_6\20121130044324466
list
open Repertoire-Warner-Sample
find //ReleaseType[text() = "TrackRelease"]
//ReleaseType[text() = "TrackRelease"]
xquery //ReleaseType[text() = "TrackRelease"]
open Repertoire-Warner-Sample
xquery count(//ReleaseType[text() = "TrackRelease"])
xquery count(//ReleaseType[text() = "Album"])
xquery count(//ReleaseType[text() = "Single"])
xquery count(//UpdateIndicator[text() = 'UpdateMessage'])
xquery count(//UpdateIndicator[text() = 'OriginalMessage'])
xquery  distinct-values(//ReleaseType/text())
xquery count(//ReleaseType[text() = "Single"])
xquery count(//ReleaseType[text() = "Album"])
xquery count(//ReleaseType[text() = "TrackRelease"])
info
open
info db
xquery count(//ReleaseList/Release/ReleaseDetailsByTerritory/TerritoryCode[text() = "Worldwide"])
xquery distinct-values(//ReleaseList/Release/ReleaseDetailsByTerritory/TerritoryCode)
INFO INDEX
CREATE INDEX TEXT
INFO INDEX
//ReleaseList/Release[ReleaseType[text()='Album']]/ReleaseDetailsByTerritory/Title[@TitleType='FormalTitle']/TitleText
info
xquery //ReleaseList/Release[ReleaseType[text()='Album']]/ReleaseDetailsByTerritory/Title[@TitleType='FormalTitle']/TitleText
info
<list>
{ for $r at $p in (//ReleaseList/Release[ReleaseType[text()='Album']]/ReleaseDetailsByTerritory/Title[@TitleType='FormalTitle']/TitleText)
  return
  <item n="{$p}">
    { $r/string() }
  </item>
}
</list>
xquery 
<xquery>
<list>
{ for $r at $p in (//ReleaseList/Release[ReleaseType[text()='Album']]/ReleaseDetailsByTerritory/Title[@TitleType='FormalTitle']/TitleText)
  return
  <item n="{$p}">
    { $r/string() }
  </item>
}
</list>
</xquery>
HELP
XQUERY
xquery
<list>
{ for $r at $p in (//ReleaseList/Release[ReleaseType[text()='Album']]/ReleaseDetailsByTerritory/Title[@TitleType='FormalTitle']/TitleText)
  return
  <item n="{$p}">
    { $r/string() }
  </item>
}
xquery <list>
{ for $r at $p in (//ReleaseList/Release[ReleaseType[text()='Album']]/ReleaseDetailsByTerritory/Title[@TitleType='FormalTitle']/TitleText)
  return
  <item n="{$p}">
    { $r/string() }
  </item>
}
xquery <list> { for $r at $p in (//ReleaseList/Release[ReleaseType[text()='Album']]/ReleaseDetailsByTerritory/Title[@TitleType='FormalTitle']/TitleText)   return   <item n="{$p}">     { $r/string() }  </item> } </list>
exit
open 
info
list
open Repertoire-Warner-Sample
xquery <list> { for $r at $p in (//ReleaseList/Release[ReleaseType[text()='Album']]/ReleaseDetailsByTerritory/Title[@TitleType='FormalTitle']/TitleText)   return   <item n="{$p}">     { $r/string() }  </item> } </list>
add
add help
add /?
add --?
add --help
exit
create DB test
xquery let $doc := copy $c := doc(G:\Warner\new_release\BY_DATE\BY_DATE_5\20121001104720176\) modify (delete node $c//DealList return $c return db:add('db', $doc)
xquery let $doc := copy $c := doc(file:///G:\Warner\new_release\BY_DATE\BY_DATE_5\20121001104720176\) modify (delete node $c//DealList return $c return db:add('db', $doc)
xquery let $doc := copy $c := doc(file:///G:/Warner/new_release/BY_DATE/BY_DATE_5/20121001104720176/) modify (delete node $c//DealList return $c return db:add('db', $doc)
exit
db info
db
help
info
help
list
open test
xquery let $doc := copy $c := doc(file:///G:/Warner/new_release/BY_DATE/BY_DATE_5/20121001104720176/) modify (delete node $c//DealList) return $c return db:add('db', $doc)
xquery let $doc := copy $c := doc(file:///G:/Warner/new_release/BY_DATE/BY_DATE_5/20121001104720176/*) modify (delete node $c//DealList) return $c return db:add('db', $doc)
help
list
create Repertoire-Universal-Sample
create db Repertoire-Universal-Sample
add G:\Universal
xquery /product/prd_title
xquery count(/product/prd_contributors/artist_name)
exit
help
XQUERY Solr-upload-Recording-Canonical-DC.xq
RUN Solr-upload-Recording-Canonical-DC.xq
RUN ../../resources/xquery/Solr-upload-Recording-Canonical-DC.xq
exit
run C:\_i4\i4BaseX\deploy\webapp\release-identification\xquery\generate-repertoire-archive.xq
exit
run C:\_i4\i4BaseX\deploy\webapp\release-identification\xquery\generate-repertoire-archive.xq
exit
run C:\_i4\i4BaseX\deploy\webapp\release-identification\xquery\generate-repertoire-archive.xq
